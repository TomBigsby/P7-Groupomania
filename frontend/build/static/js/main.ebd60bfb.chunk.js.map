{"version":3,"sources":["components/Header.js","config.js","components/Login.js","pages/PageLogin.js","assets/images/avatar.svg","components/SignUp.js","pages/PageSignUp.js","components/HeaderSmall.js","components/Profile.js","pages/PageProfile.js","components/DeleteProfile.js","pages/PageDeleteProfile.js","components/Comments.js","components/Publication.js","components/Publications.js","pages/PagePublications.js","components/NewPublication.js","pages/PageNewPublication.js","pages/Page404.js","App.js","index.js"],"names":["Header","className","serverUrl","Login","useState","user","setUser","email_error","password_error","msgAlert","setMsgAlert","history","useHistory","localStorageLoaded","setLocalStorageLoaded","accessGranted","setAccessGranted","inputEmail","useRef","inputPassword","onSubmit","e","preventDefault","target","email","value","password","fetch","method","body","JSON","stringify","current","headers","then","res","json","userId","currentUserInfos","username","avatarUrl","isAdmin","localStorage","setItem","token","htmlFor","type","id","name","ref","error_login_user","error_login_password","onClick","push","exact","to","PageLogin","SignUp","preview","imageUrl","image","setImage","username_error","inputAdminPassword","checkbox","formData","FormData","append","checked","_id","src","alt","avatar","accept","onChange","files","length","URL","createObjectURL","style","display","error_signup_email","error_signup_email_exist","fontSize","color","textDecoration","error_signup_password","classList","toggle","placeholder","error_psw_admin","error","PageSignUp","HeaderSmall","avatarDelay","setAvatarDelay","parse","getItem","placeHolder","avatarPlaceHolder","timer","setTimeout","delay","Profile","setIsLoggedIn","usernameDiv","usernameInput","blocDisplay1","blocEdit1","defaultValue","removeItem","PageProfile","DeleteProfile","confirmDeleted","setConfirmDeleted","isDelete","setIsDelete","choiceToDelete","confirmDelete","catch","console","status","PageDeleteProfile","zonedTimeToUtc","require","Comments","props","startDate","fieldEnabled","setFieldEnabled","comment","commentAuthorMessage","setComment","inputMessage","btEditMessage","warningDeleteComment","editComment","commentId","messageValue","sendCommentEdit","replace","newComment","disabled","focus","select","validEdition","add","commentToDelete","commentAuthorAvatarUrl","commentAuthorUserName","commentDate","formatDistanceToNow","locale","fr","includeSeconds","commentAuthorId","remove","onKeyDown","key","onKeyPressed","Publication","comments","setComments","displayComments","setDisplayComments","isEditMode","setIsEditMode","publication","postTitle","title","setTitle","commentsCount","setCommentsCount","cardHeader","inputTitle","btEditPublication","postCommentInput","warningDeleteMsg","editPublication","useEffect","filter","postId","sendComment","today","ok","Error","data","blur","deleteComment","format","Date","postToDelete","postDate","event","submit","form","undefined","onBlur","sort","a","b","map","commentPostId","Publications","publications","setPublications","deletePost","PagePublications","NewPublication","setPublication","title_error","image__error","image_error","message","PageNewPublication","Page404","App","isLoggedIn","hasToken","interval","setInterval","clearInterval","from","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebd60bfb.chunk.js","sourcesContent":["const Header = () => {\n\n\n    return (\n        <>\n            <div className=\"header bg-big\">\n                <div className=\"logo logo-big\"></div>\n            </div>\n            <div className=\"main-position bg-big\"></div>\n        </>\n    );\n};\n\nexport default Header;","// export const serverUrl = serverUrl;\nexport const serverUrl = 'https://groupomania.thomak.xyz/backend';","import { Link } from \"react-router-dom\";\nimport { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { serverUrl } from '../config';\n\n\nconst Login = () => {\n    const [user, setUser] = useState(false)\n    const [msgAlert, setMsgAlert] = useState({ email_error: \"\", password_error: \"\" });\n    const history = useHistory();\n\n\n    //TODO  à utiliser (éviter les problème d'erreur 404 si local storage déjà existant)\n    const [localStorageLoaded, setLocalStorageLoaded] = useState(false);\n    const [accessGranted, setAccessGranted] = useState(false);\n\n\n    const inputEmail = useRef()\n    const inputPassword = useRef()\n\n\n    const submit = e => {\n        e.preventDefault()\n\n        if (e.target.email.value !== \"\" && e.target.password.value !== \"\") {\n            setMsgAlert({ email_error: \"\", password_error: \"\" })\n\n            fetch(`${serverUrl}/api/auth/login`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    email: inputEmail.current.value,\n                    password: inputPassword.current.value\n                }),\n                headers: { 'Content-Type': 'application/json' },\n            })\n                .then(res => res.json()\n                    .then(json => {\n                        setUser(json);\n\n                        if (json.userId) {\n                            setAccessGranted(true)\n\n                            const currentUserInfos = {\n                                userId: json.userId,\n                                username: json.username,\n                                avatarUrl: json.avatarUrl,\n                                isAdmin: json.isAdmin\n                            }\n                            localStorage.setItem(\"token\", JSON.stringify(json.token));\n                            localStorage.setItem(\"currentUserInfos\", JSON.stringify(currentUserInfos));\n                            setLocalStorageLoaded(true)\n                        }\n                    }\n                    ));\n\n        } else {\n            if (e.target.email.value === \"\") {\n                setMsgAlert({ email_error: \"Email manquant\", password_error: \"\" })\n            }\n            if (e.target.password.value === \"\") {\n                setMsgAlert({ email_error: \"\", password_error: \"Mot de passe manquant\" })\n            }\n            if (e.target.email.value === \"\" && e.target.password.value === \"\") {\n                setMsgAlert({ email_error: \"Email manquant\", password_error: \"Mot de passe manquant\" })\n            }\n        }\n    }\n\n\n    const handleRedirect = () => {\n        // Vérifier si toutes les conditions sont remplies\n        if (localStorageLoaded && accessGranted && user && !user.error_login_user && !user.error_login_password) {\n            // Utiliser history.push pour effectuer la redirection\n            history.push('/publications');\n        }\n    };\n\n\n\n    return (\n        <div className=\"login-container\">\n\n            <div className=\"welcome\">Bienvenue</div>\n            <div className=\"filet\"></div>\n            <div className=\"connect\">Connectez-vous</div>\n\n            <form className=\"login-form\" onSubmit={submit}>\n                <div className=\"field-bloc\">\n                    <label htmlFor=\"email\">email <span className=\"red\">* </span></label>\n                    <input type=\"email\" id=\"email\" name=\"email\" ref={inputEmail} />\n                    <div className=\"error-msg\">{msgAlert.email_error}{user.error_login_user && <p>{user.error_login_user}</p>}</div>\n                </div>\n                <div className=\"field-bloc\">\n                    <label htmlFor=\"password\">mot de passe <span className=\"red\">* </span></label>\n                    <input type=\"password\" id=\"password\" ref={inputPassword} />\n                    <div className=\"error-msg\">{msgAlert.password_error}{user.error_login_password && <p>{user.error_login_password}</p>}</div>\n\n                </div>\n                <input type=\"submit\" name=\"Connexion\" value=\"Connexion\" className=\"bt\" onClick={handleRedirect} />\n\n                <div className=\"signup-link\">Vous n'avez pas de compte ? <Link exact to=\"/inscription\">inscrivez-vous</Link></div>\n                <div className=\"required-field\"><span className=\"red\">* </span>Champs obligatoires</div>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;","import Header from \"../components/Header\";\nimport Login from \"../components/Login\";\n\nconst PageLogin = () => {\n    return (\n        <>\n            <Header />\n            <div className=\"main\">\n                <Login />\n            </div>\n        </>\n    );\n};\n\nexport default PageLogin;","export default __webpack_public_path__ + \"static/media/avatar.6890d106.svg\";","import avatar from '../assets/images/avatar.svg'\nimport { useState, useRef } from 'react';\nimport { Redirect } from 'react-router'\nimport { Link } from \"react-router-dom\";\nimport { serverUrl } from '../config';\n\nconst SignUp = () => {\n\n    const [user, setUser] = useState(false);\n    const [image, setImage] = useState({ preview: \"\", imageUrl: \"\" })\n    const [msgAlert, setMsgAlert] = useState({ email_error: \"\", password_error: \"\", username_error: \"\" });\n    const [localStorageLoaded, setLocalStorageLoaded] = useState(false);\n\n    const inputAdminPassword = useRef()\n    const checkbox = useRef()\n\n\n\n    const submit = e => {\n        e.preventDefault()\n\n\n        // Envoi des données du formulaire\n        const formData = new FormData(e.target);\n        formData.append(\"adminChecked\", checkbox.current.checked);\n\n        if (e.target.email.value !== \"\" && e.target.password.value !== \"\" && e.target.username.value !== \"\") {\n            setMsgAlert({ email_error: \"\", password_error: \"\", username_error: \"\" })\n\n            fetch(`${serverUrl}/api/auth/signup`, {\n                method: 'POST',\n                body: formData,\n            })\n\n                // récup la réponse pour obtenir le userId et le stocker dans un localStorage\n                .then(res => res.json()\n                    .then(json => {\n                        setUser(json);\n\n                        const currentUserInfos = {\n                            userId: json._id,\n                            token: json.token,\n                            username: e.target.username.value,\n                            avatarUrl: json.avatarUrl,\n                            isAdmin: json.isAdmin\n                        }\n\n                        localStorage.setItem(\"currentUserInfos\", JSON.stringify(currentUserInfos));\n                        localStorage.setItem(\"token\", JSON.stringify(json.token));\n                        setLocalStorageLoaded(true)\n                    }\n                    ));\n\n        } else {\n            if (e.target.email.value === \"\") {\n                setMsgAlert({ email_error: \"Email manquant\", password_error: \"\", username_error: \"\" })\n            }\n            if (e.target.password.value === \"\") {\n                setMsgAlert({ email_error: \"\", password_error: \"Mot de passe manquant\", username_error: \"\" })\n            }\n            if (e.target.username.value === \"\") {\n                setMsgAlert({ email_error: \"\", password_error: \"\", username_error: \"Nom d'utilisateur manquant\" })\n            }\n\n            // TODO: A optimiser > réduire le nombre de combinaisons\n            if (e.target.email.value === \"\" && e.target.password.value === \"\") {\n                setMsgAlert({ email_error: \"Email manquant\", password_error: \"Mot de passe manquant\", username_error: \"\" })\n            }\n            if (e.target.email.value === \"\" && e.target.username.value === \"\") {\n                setMsgAlert({ email_error: \"Email manquant\", password_error: \"\", username_error: \"Nom d'utilisateur manquant\" })\n            }\n            if (e.target.password.value === \"\" && e.target.username.value === \"\") {\n                setMsgAlert({ password_error: \"Mot de passe manquant\", username_error: \"Nom d'utilisateur manquant\" })\n            }\n            if (e.target.email.value === \"\" && e.target.password.value === \"\" && e.target.username.value === \"\") {\n                setMsgAlert({ email_error: \"Email manquant\", password_error: \"Mot de passe manquant\", username_error: \"Nom d'utilisateur manquant\" })\n            }\n        }\n    }\n\n\n    const adminInputDisplay = () => {\n        if (checkbox.current.checked === true) {\n            inputAdminPassword.current.classList.toggle(\"invisible\")\n        }\n        else {\n            inputAdminPassword.current.classList.toggle(\"invisible\")\n        }\n    }\n\n    const getImageUrl = (e) => {\n        if (e.target.files.length) {\n            setImage({\n                preview: URL.createObjectURL(e.target.files[0]),\n                imageUrl: e.target.files[0]\n            });\n        }\n    }\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"welcome\">Inscription</div>\n            <div className=\"filet\"></div>\n            <div className=\"connect\">Rejoignez-nous</div>\n\n            <form className=\"signup-form\" onSubmit={submit}>\n                <div className=\"signup-avatar\">\n                    <div className=\"signup-avatar-text-hover\">Importer une image</div>\n                    <label htmlFor=\"upload-button\">{image.preview ? <img src={image.preview} alt='' /> : (\n                        <img src={avatar} alt=\"\" />\n                    )}</label>\n                    <input type=\"file\" name=\"image\" id=\"upload-button\" accept=\".png, .jpg, .jpeg\" onChange={getImageUrl} style={{ display: \"none\" }} />\n                </div>\n                <div className=\"field-bloc\">\n                    <label htmlFor=\"email\">Email <span className=\"red\">* </span></label>\n                    <input type=\"email\" id=\"email\" name=\"email\" />\n                    <div className=\"error-msg\" >{msgAlert.email_error}{(user.error_signup_email && <p>{user.error_signup_email}</p>) || (user.error_signup_email_exist && <p>{user.error_signup_email_exist}</p>)}</div>\n                    {user.error_signup_email_exist && <Link exact to=\"/login\" style={{ fontSize: \"0.8em\", color: \"white\", textDecoration: \"underline\" }}> <i className=\"fas fa-long-arrow-alt-right\"></i> Page de connexion</Link>}\n                </div>\n                <div className=\"field-bloc\">\n                    <label htmlFor=\"password\">mot de passe <span className=\"red\">* </span> <i className=\"fas fa-info-circle\"></i> <div className=\"infobulle\">Doit contenir une majuscule, une minuscule, plus de 8 caractères et au moins 1 caractère spécial parmi : ! @ # $ % ^ & *</div></label>\n                    <input type=\"password\" id=\"password\" name=\"password\" />\n                    <div className=\"error-msg\"> {msgAlert.password_error}{user.error_signup_password && <p>{user.error_signup_password}</p>}</div>\n                </div>\n                <div className=\"field-bloc\">\n                    <label htmlFor=\"username\">Nom d'utilisateur <span className=\"red\">* </span></label>\n                    <input type=\"text\" id=\"username\" name=\"username\" />\n                    <div className=\"error-msg\"> {msgAlert.username_error}</div>\n                </div>\n\n                <div className=\"adminConnexion\">\n                    <input className=\"checkbox\" type=\"checkbox\" id=\"admin\" ref={checkbox} onClick={adminInputDisplay} />\n                    <label htmlFor=\"admin\">Compte administrateur</label>\n                    <input type=\"password\" className=\"adminPassword invisible\" name=\"adminPassword\" placeholder=\"Code admin\" ref={inputAdminPassword} />\n                    <div className=\"error-msg\"> {user.error_psw_admin && <p>{user.error_psw_admin}</p>}</div>\n                </div>\n\n                <input type=\"submit\" name=\"Inscription\" value=\"Inscription\" className=\"bt\" />\n                {localStorageLoaded && user && !user.error && !user.error_signup_email && !user.error_signup_email_exist && !user.error_signup_password && !user.error_psw_admin && <Redirect to=\"/publications\" />}\n                <div className=\"required-field\"><span className=\"red\">* </span>Champs obligatoires</div>\n            </form>\n        </div >\n    );\n};\n\nexport default SignUp;\n","import Header from \"../components/Header\"\nimport SignUp from \"../components/SignUp\"\n\nconst PageSignUp = () => {\n    return (\n        <>\n            <Header />\n            <div className=\"main\">\n                <SignUp />\n            </div>\n        </>\n    );\n};\n\nexport default PageSignUp;","import { Link } from \"react-router-dom\";\nimport { useState } from 'react';\nimport avatarPlaceHolder from '../assets/images/avatar.svg'\n\n\n\nconst HeaderSmall = () => {\n\n    const [avatarDelay, setAvatarDelay] = useState(\"\")\n    let currentUserInfos = JSON.parse(localStorage.getItem(\"currentUserInfos\"));\n\n\n\n    const placeHolder = currentUserInfos.avatarUrl === \"undefined\" ? avatarPlaceHolder : currentUserInfos.avatarUrl\n\n\n\n\n    const delay = () => {\n        const timer = setTimeout(() => {\n            currentUserInfos.avatarUrl !== \"undefined\" && setAvatarDelay(currentUserInfos.avatarUrl);\n\n        }, 100);\n        return () => clearTimeout(timer);\n    }\n    delay()\n\n\n    return (\n        <>\n            <div className=\"header bg-small\">\n                <div className=\"logo logo-small\"></div>\n\n                <Link className=\"bg-avatar\" exact to=\"/profil\"><img src={avatarDelay ? avatarDelay : placeHolder} alt=\"\" /></Link>\n\n\n\n            </div>\n            <div className=\"main-position bg-small\"></div>\n        </>\n    );\n};\n\nexport default HeaderSmall;","import { Link } from 'react-router-dom';\nimport { useRef } from 'react'\nimport avatarPlaceHolder from '../assets/images/avatar.svg'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst Profile = ({ setIsLoggedIn }) => {\n\n    const history = useHistory();\n\n    const usernameDiv = useRef();\n    const usernameInput = useRef();\n\n    const blocDisplay1 = useRef();\n    const blocEdit1 = useRef();\n    // const history = useHistory();\n\n    let currentUserInfos = JSON.parse(localStorage.getItem(\"currentUserInfos\"));\n\n    let username = currentUserInfos.username\n\n\n    // Fonction pour gérer la déconnexion de l'utilisateur\n    const handleLogout = () => {\n        // Supprimer le token du localStorage ou effectuer d'autres actions de déconnexion\n        localStorage.removeItem('token');\n        localStorage.removeItem('currentUserInfos');\n        // Mettre à jour l'état isLoggedIn à false après la déconnexion\n        setIsLoggedIn(false);\n        // Rediriger vers la page de connexion (\"/login\")\n        history.push('/login');\n    };\n\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"bt-close\"><i className=\"fas fa-times\"></i></div>\n            <Link exact to=\"/publications\" className=\"bt-close\"><i className=\"fas fa-times\"></i></Link>\n            <div className=\"avatar-profile\"><img src={currentUserInfos.avatarUrl === \"undefined\" ? avatarPlaceHolder : currentUserInfos.avatarUrl} alt=\"\" /></div>\n\n\n            <div className=\"blocDisplay\" ref={blocDisplay1}>\n                <div className=\"divRow\">\n                    <div className=\"username\" ref={usernameDiv}>{username} </div>\n                </div>\n            </div>\n            <div className=\"bloc-edit invisible\" ref={blocEdit1}>\n                <div className=\"divRow\">\n                    <input className=\"edit-field\" type=\"text\" defaultValue={username} ref={usernameInput} />\n                </div>\n            </div>\n\n\n            <div className=\"separatorH\"></div>\n            <div className=\"signout-delete-account\">\n                {/*  en cliquant sur le bouton on supprime le token du localStorage et on redirection page login */}\n                <div className=\"bt-signout-account\"><i className=\"fas fa-sign-out-alt\" onClick={handleLogout}></i></div>\n                <Link exact to=\"/supression-profil\" className=\"bt-delete-account\"><i className=\"far fa-trash-alt\"></i></Link>\n            </div>\n        </div >\n    );\n};\n\nexport default Profile;","import HeaderSmall from \"../components/HeaderSmall\"\nimport Profile from \"../components/Profile\"\n\nconst PageProfile = ({ setIsLoggedIn }) => {\n    return (\n        <>\n            <HeaderSmall />\n            <div className=\"main\">\n                <Profile setIsLoggedIn={setIsLoggedIn} />\n            </div>\n        </>\n    );\n};\n\nexport default PageProfile;","import { Link } from \"react-router-dom\";\nimport { useState, useRef } from 'react'\nimport { serverUrl } from '../config';\n\nconst DeleteProfile = () => {\n\n    const [confirmDeleted, setConfirmDeleted] = useState(false);\n    const [isDelete, setIsDelete] = useState(false);\n\n    const choiceToDelete = useRef()\n    const confirmDelete = useRef()\n\n    const currentUserInfos = JSON.parse(localStorage.getItem(\"currentUserInfos\"));\n\n\n    const quitMsg = () => {\n\n        // Suppression de l'utilisateur\n        fetch(`${serverUrl}/api/auth/delete/` + currentUserInfos.userId, {\n            method: 'DELETE',\n        })\n            .catch((error) => console.error(error))\n            .then(res => {\n\n                if (res.status === 200) {\n                    setIsDelete(true)\n                    setConfirmDeleted(!confirmDeleted)\n                }\n            })\n    }\n\n\n    return (\n        <>\n            {confirmDeleted ?\n                <div ref={confirmDelete}>\n                    <div className=\"container\">\n                        <div className=\"cry-pic\"></div>\n                        <div className=\"msg-quit\">Votre profil a été supprimé</div>\n                        <div className=\"choices\">\n                            {isDelete === true && <Link exact to=\"/login\"><button className=\"bt\">Retour à l'accueil</button></Link>}\n                        </div>\n                    </div>\n                </div>\n                :\n                <div ref={choiceToDelete}>\n                    <div className=\"container\">\n                        <div className=\"sad-pic\"></div>\n                        <div className=\"msg-quit\">Vous nous quittez ?</div>\n                        <div className=\"picto-warning\"></div>\n                        <div className=\"text\">\n                            <span><strong>Confirmez-vous la suppression du compte ?</strong></span><br />\n                            <span>Cette action est irréversible.</span>\n                        </div>\n                        <div className=\"choices\">\n                            <Link exact to=\"/profil\"><button className=\"bt-cancel\">Non, je reste</button></Link>\n                            <button className=\"bt bt-quit\" onClick={quitMsg} >Oui, je supprime</button>\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default DeleteProfile;","import DeleteProfile from \"../components/DeleteProfile\"\nimport HeaderSmall from \"../components/HeaderSmall\";\n\nconst PageDeleteProfile = () => {\n    return (\n        <>\n            <HeaderSmall />\n            <div className=\"main\">\n                <DeleteProfile />\n            </div>\n        </>\n    );\n};\n\nexport default PageDeleteProfile;","import { useState, useRef } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize';\nimport avatarPlaceHolder from '../assets/images/avatar.svg'\nimport { serverUrl } from '../config';\n\n\nimport { fr } from 'date-fns/locale';\nimport { formatDistanceToNow } from 'date-fns';\nconst { zonedTimeToUtc } = require('date-fns-tz')\n\nconst token = JSON.parse(localStorage.getItem(\"token\"));\n\n\nconst Comments = (props) => {\n    const [fieldEnabled, setFieldEnabled] = useState(false);\n    const [comment, setComment] = useState(props.comment.commentAuthorMessage);\n\n    const inputMessage = useRef()\n    const btEditMessage = useRef()\n    const warningDeleteComment = useRef()\n\n    const currentUserInfos = JSON.parse(localStorage.getItem(\"currentUserInfos\"));\n\n\n    // Modification d'un commentaire\n    const sendCommentEdit = (commentId, messageValue) => {\n\n        const formData = new FormData();\n        formData.append(\"commentId\", commentId);\n        formData.append(\"commentAuthorMessage\", messageValue);\n\n        fetch(`${serverUrl}/api/publications/comments/` + commentId, {\n            method: 'PUT',\n            body: formData,\n            headers: { \"authorization\": \"Bearer \" + token }\n        })\n            .then(res => res.json())\n            .catch((error) => console.error(error));\n\n    }\n\n\n    // Edition des commentaires\n    const editComment = (commentId) => {\n        setFieldEnabled(!fieldEnabled)\n\n        // Mode Edition du commentaire\n        if (fieldEnabled === true) {\n            sendCommentEdit(commentId, inputMessage.current.value)\n            btEditMessage.current.classList.replace(\"isEditMode\", \"post-comment-picto\");\n\n            const newComment = inputMessage.current.value\n            setComment(newComment)\n\n        } else {\n            inputMessage.current.disabled = false;\n            inputMessage.current.focus()\n            inputMessage.current.select()\n\n            btEditMessage.current.classList.replace(\"post-comment-picto\", \"isEditMode\");\n\n        }\n    }\n\n    const onKeyPressed = (e, commentId) => {\n        const key = e.key\n        if (key === \"Enter\") {\n            validEdition(commentId)\n        }\n    }\n\n    const onClickValid = (commentId) => {\n        validEdition(commentId)\n    }\n\n    const validEdition = (commentId) => {\n        const newComment = inputMessage.current.value\n        setComment(newComment)\n        setFieldEnabled(false)\n        editComment(commentId)\n    }\n\n\n    // Heure (dateTime) convertie en temps écoulé\n        const elapsedTime = (startDate) => {\n            return formatDistanceToNow(zonedTimeToUtc(startDate), { locale: fr, includeSeconds: false });\n        }\n\n\n    // console.log(\"commentAuthorMessage\", props.comment.commentAuthorMessage)\n\n\n    return (\n        <>\n            <div className=\"post-comment\">\n                {/* message de suppression de commentaire */}\n                <div className=\"comment-cache invisible\" ref={warningDeleteComment} >\n                    <div className=\"comment-cache-background\"></div>\n                    <div className=\"comment-cache-deleteMsg\">\n                        <p>Confirmez-vous la suppression de ce commentaire ?</p>\n                        <div className=\"buttons\">\n                            <button className=\"bt-cancel\" onClick={() => { warningDeleteComment.current.classList.add(\"invisible\") }}>Non</button>\n                            <button className=\"bt\" onClick={() => { warningDeleteComment.current.classList.add(\"invisible\"); props.commentToDelete(props.comment._id) }}>Oui, je supprime</button>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"post-comment-bloc1\">\n                    <div className=\"post-comment-bloc1-a\">\n                        <div className=\"post-comment-avatar\"><img src={props.comment.commentAuthorAvatarUrl === \"undefined\" ? avatarPlaceHolder : props.comment.commentAuthorAvatarUrl} alt=\"\" /></div>\n                    </div>\n                    <div className=\"post-comment-bloc1-b\">\n                        <div className=\"post-comment-name\">{props.comment.commentAuthorUserName}</div>\n                        <div className=\"post-comment-date\">  <span>&nbsp;</span>il y a {elapsedTime(props.comment.commentDate)}</div>\n\n                        {(currentUserInfos.isAdmin || currentUserInfos.userId === props.comment.commentAuthorId) &&\n                            <div className=\"post-comment-pictos\">\n                                <div className=\"post-comment-picto-edit\" ref={btEditMessage} onClick={() => { editComment(props.comment._id) }}>\n                                    {fieldEnabled ? <div><i className=\"fas fa-undo-alt\"></i></div> : <div><i className=\"fas fa-edit\"></i></div>}</div>\n                                <div className=\"post-comment-picto-delete\" onClick={() => { warningDeleteComment.current.classList.remove(\"invisible\"); }}><i className=\"far fa-trash-alt\"></i></div>\n                            </div>}\n\n\n                    </div>\n                </div>\n                <div className=\"post-comment-bloc2\">\n                    {fieldEnabled ?\n                        <div className=\"group\">\n                            <TextareaAutosize className=\"post-comment-message textareaAutosize highlight\" onKeyDown={(e) => { onKeyPressed(e, props.comment._id) }} ref={inputMessage} defaultValue={comment} />\n                            <div className=\"bt-valid-comment\" onClick={() => { onClickValid(props.comment._id) }}><i className=\"fas fa-check-square\"></i></div>\n                        </div>\n\n                        :\n                        <TextareaAutosize className=\"post-comment-message textareaAutosize\" disabled ref={inputMessage} value={comment} />}\n\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Comments;","import { useState, useEffect, useRef } from 'react';\nimport { serverUrl } from '../config';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Comments from \"./Comments\";\nimport avatarPlaceHolder from '../assets/images/avatar.svg'\n// import Votes from './Votes';\n\n\nimport { fr } from 'date-fns/locale';\nimport { formatDistanceToNow } from 'date-fns';\nimport { format } from 'date-fns'\n\n\n\nconst { zonedTimeToUtc } = require('date-fns-tz')\n\nconst Publication = (props) => {\n\n    const [comments, setComments] = useState([]);\n    // const [comments2, setComments2] = useState([]);\n    const [displayComments, setDisplayComments] = useState(false);\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [title, setTitle] = useState(props.publication.postTitle);\n    const [image, setImage] = useState({ preview: props.publication.imageUrl, imageUrl: \"\" })\n    const [commentsCount, setCommentsCount] = useState(0);\n\n    const cardHeader = useRef()\n    const inputTitle = useRef()\n    const btEditPublication = useRef()\n    const postCommentInput = useRef()\n    const warningDeleteMsg = useRef()\n\n    const currentUserInfos = JSON.parse(localStorage.getItem(\"currentUserInfos\"));\n    const token = JSON.parse(localStorage.getItem(\"token\"));\n\n    // edition de la publication \n    const editPublication = () => {\n        setIsEditMode(!isEditMode)\n\n        // Au moment du clic, d'état de isEditMode actuel est...\n        if (isEditMode === true) {\n            cardHeader.current.classList.toggle(\"post-author-edit\")\n\n        } else {\n            cardHeader.current.classList.toggle(\"post-author-edit\")\n\n            inputTitle.current.disabled = false;\n            inputTitle.current.focus()\n            inputTitle.current.select()\n        }\n    }\n\n    const submit = (event, postId) => {\n        event.preventDefault()\n\n        editPublication()\n\n        const formData = new FormData(event.target);\n        formData.append(\"postId\", postId);\n\n        setTitle(event.target.postTitle.value)\n\n        fetch(`${serverUrl}/api/publications/` + postId, {\n            method: 'PUT',\n            body: formData,\n            headers: { \"authorization\": \"Bearer \" + token }\n        })\n            .then(res => res.json())\n            .catch((error) => console.error(error));\n    }\n\n    // Affichage de la preview\n    const getImageUrl = (event) => {\n        if (event.target.files.length) {\n            setImage({ preview: URL.createObjectURL(event.target.files[0]), imageUrl: event.target.files[0] });\n        }\n    }\n\n\n    // Récupération des commentaires\n    useEffect(() => {\n        fetch(`${serverUrl}/api/publications/' + props.publication._id + '/comments`, {\n            method: 'GET',\n            headers: { \"authorization\": \"Bearer \" + token }\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setComments(res);\n                setCommentsCount(res.filter(comment => comment.postId === props.publication._id).length);\n            })\n            .catch((error) => console.error(error));\n    }, [props.publication._id, token]);\n\n\n    // Ajout d'un nouveau commentaire\n    const sendComment = (postId) => {\n        // Avertisseur visuel si le champ est vide à la validation\n        if (postCommentInput.current.value !== \"\") {\n            const formData = new FormData();\n            formData.append(\"commentAuthorId\", currentUserInfos.userId);\n            formData.append(\"commentAuthorUserName\", currentUserInfos.username);\n            formData.append(\"commentAuthorAvatarUrl\", currentUserInfos.avatarUrl);\n            formData.append(\"commentDate\", today);\n            formData.append(\"commentAuthorMessage\", postCommentInput.current.value);\n\n            // réinitialisation du champ de texte\n            postCommentInput.current.value = \"\";\n\n            fetch(`${serverUrl}/api/publications/` + postId + '/comments', {\n                method: 'POST',\n                body: formData,\n                headers: { \"authorization\": \"Bearer \" + token }\n            })\n                .then((res) => {\n                    if (res.ok) {\n                        // Le nouveau commentaire a été ajouté avec succès, récupérer la réponse JSON avec les détails du nouveau commentaire (si besoin)\n                        return res.json();\n                    } else {\n                        throw new Error('Une erreur est survenue lors de l\\'ajout du commentaire.');\n                    }\n                })\n                .then((data) => {\n                    // Mettre à jour l'état comments en ajoutant le nouveau commentaire à la liste existante\n                    setComments([...comments, data]);\n                    setCommentsCount(commentsCount + 1);\n                    setDisplayComments(true);\n                })\n                .catch((error) => console.error(error));\n\n\n        } else {\n            postCommentInput.current.classList.add(\"warning-field\")\n            postCommentInput.current.blur();\n        }\n    }\n\n    // envoi du message en tapant la touche Entrer\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            sendComment(props.publication._id);\n        }\n    };\n\n    // Permet d'éviter que la page se recharge à la validation du formulaire\n    const handleFormSubmit = (event) => {\n        event.preventDefault(); // Empêche le rechargement de la page par défaut\n        sendComment(props.publication._id);\n        postCommentInput.current.blur(); // Supprime le focus de l'élément input\n\n    };\n\n    // supprime la bordure de warning si le champ n'est plus vide\n    const typingField = (event) => {\n        event.target.classList.remove(\"warning-field\")\n    }\n\n    // supprime la bordure de warning si le champ n'a plus le focus\n    const handleBlur = () => {\n        if (postCommentInput.current.value === \"\") {\n            postCommentInput.current.classList.remove(\"warning-field\");\n        }\n    };\n\n\n\n\n    // Suppression du commentaire\n    const deleteComment = (_id) => {\n        fetch(`${serverUrl}/api/publications/comments/` + _id, {\n            method: 'DELETE',\n            headers: { \"authorization\": \"Bearer \" + token }\n        })\n            .then((res) => {\n                if (res.ok) {\n                    // La suppression a réussi, mettre à jour l'état comments en filtrant les commentaires pour exclure celui supprimé\n                    setComments(comments.filter(comment => comment._id !== _id));\n                    setCommentsCount(commentsCount - 1);\n                } else {\n                    throw new Error('Une erreur est survenue lors de la suppression du commentaire.');\n                }\n            })\n            .catch((error) => console.error(error));\n    }\n\n\n    // gestion de la date affiché au temps passé\n    // Attention : conversion au fomat UTC nécessaire (install package date-fns-tz)\n    const today = format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\")\n\n    const elapsedTime = (startDate) => {\n        return formatDistanceToNow(zonedTimeToUtc(startDate), { locale: fr, includeSeconds: false });\n    }\n\n\n\n    return (\n        <>\n            {/* panneau de suppression de publication */}\n            <div className=\"post-cache invisible\" ref={warningDeleteMsg} >\n                <div className=\"post-cache-background\"></div>\n                <div className=\"post-cache-deleteMsg\">\n                    <p>Confirmez-vous la suppression du message ainsi que tous ses commentaires ?</p>\n                    <div className=\"buttons\">\n                        <button className=\"bt-cancel\" onClick={() => { warningDeleteMsg.current.classList.add(\"invisible\") }}>Non</button>\n                        <button className=\"bt\" onClick={() => { warningDeleteMsg.current.classList.add(\"invisible\"); props.postToDelete(props.publication._id) }}>Oui, je supprime</button>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"post-author\" ref={cardHeader}>\n                <div className=\"post-author-avatar\"><img src={props.publication.avatarUrl === \"undefined\" ? avatarPlaceHolder : props.publication.avatarUrl} alt=\"\" /></div>\n                <div>\n                    <span className=\"post-author-name\">{props.publication.username} <span>&nbsp;</span>\n                        <span className=\"post-author-date\">il y a {elapsedTime(props.publication.postDate)}</span>\n                    </span>\n                </div>\n\n                {/* Si la publication a été créée par l'utilisateur actuel ou si c'est un admin, les boutons de modif/suppr s'affichent  */}\n                {(currentUserInfos.isAdmin || currentUserInfos.userId === props.publication.userId) && <div className=\"post-author-pictos\">\n                    <div className=\"post-author-picto-edit\" ref={btEditPublication} onClick={() => editPublication()}>{isEditMode ? <div><i className=\"fas fa-undo-alt\"></i></div> : <div><i className=\"fas fa-edit\"></i></div>}</div>\n                    <div className=\"post-author-picto-delete\" onClick={() => { warningDeleteMsg.current.classList.remove(\"invisible\"); setDisplayComments(false) }}><i className=\"fas fa-trash-alt\"></i></div>\n                </div>}\n\n            </div>\n\n            {\n                isEditMode ?\n                    <form className=\"post-publication box\" onSubmit={(e) => submit(e, props.publication._id)}>\n\n                        <TextareaAutosize className=\"post-publication-title textareaAutosize highlights\" name=\"postTitle\" id=\"titre\" ref={inputTitle} defaultValue={title} />\n\n                        <label htmlFor=\"upload-button\">{\n                            <div>\n                                <div className=\"upload-button\"><i className=\"fas fa-file-upload\"></i> &nbsp;Charger une nouvelle image</div>\n                                <div className=\"post-publication-image\">\n                                    <img src={image.preview} alt=\"\" />\n                                </div>\n                            </div>\n                        }</label>\n                        <input type=\"file\" name=\"image\" id=\"upload-button\" accept=\".png, .jpg, .jpeg\" onChange={getImageUrl} style={{ display: \"none\" }} />\n\n                        <input type=\"submit\" name=\"envoyer-message\" value=\"Valider la modification\" className=\"bt\" />\n                    </form>\n                    :\n                    <div className=\"post-publication box\">\n                        <TextareaAutosize className=\"post-publication-title textareaAutosize\" disabled ref={inputTitle} value={title} />\n                        <div className=\"post-publication-image\">\n                            <img src={image.preview} alt=\"\" />\n                        </div>\n                    </div>\n            }\n\n\n            <form form=\"true\" className=\"post-new-comment box\" onSubmit={handleFormSubmit} >\n                <div className=\"post-new-comment-avatar\"><img src={currentUserInfos.avatarUrl === undefined ? avatarPlaceHolder : currentUserInfos.avatarUrl} alt=\"\" /></div>\n                <input\n                    type=\"text\"\n                    className=\"post-new-comment-message\"\n                    ref={postCommentInput} placeholder=\"Ecrire un commentaire\"\n                    onChange={(e) => typingField(e)}\n                    onKeyDown={handleKeyDown}\n                    onBlur={handleBlur}\n                />\n\n                <div className=\"post-new-comment-send\" onClick={() => sendComment(props.publication._id)}><i className=\"fas fa-arrow-circle-right\"></i></div>\n                {/* <div className=\"post-new-comment-send\">[Retour] pour envoyer</div> */}\n            </form>\n\n            <div className=\"post-interactions box\">\n                <div className=\"separatorV\"></div>\n                <div className=\"post-interactions-comments\">\n                    <div className=\"post-interactions-comments-picto\"><i className=\"far fa-comment \"></i></div>\n                    <div className=\"post-interactions-comments-number\">{commentsCount < 2 ? commentsCount + \" commentaire\" : commentsCount + \" commentaires\"} </div>\n\n                    {/* Si il y a au moins 1 commentaire le bouton s'affiche */}\n                    {commentsCount > 0 && < div onClick={() => setDisplayComments(!displayComments)}>{displayComments ?\n                        <>\n                            <i className=\"fas fa-caret-square-up\" title=\"Masquer les commentaires\"></i>\n                        </>\n                        :\n                        <i className=\"fas fa-caret-square-down\" title=\"Afficher les commentaires\"></i>}\n                    </div>}\n                </div>\n            </div>\n\n            {/* Masquage des commentaires par défaut - clic fleche pour les afficher */}\n            {displayComments && comments\n                // tri du plus récent au plus ancien commentaire\n                .filter(comment => comment.postId === props.publication._id)\n                .sort((a, b) => new Date(b.commentDate) - new Date(a.commentDate))\n                .map((comment) => (\n                    <div key={comment._id} >\n                        {\n                            comment.postId === props.publication._id &&\n                            <div className=\"post-comments box\">\n                                < Comments comment={comment} commentPostId={comment.postId} commentToDelete={deleteComment} />\n                            </div>\n                        }\n                    </div >\n                ))\n            }\n            <div className={displayComments ? 'close-comments' : 'close-comments hidden'} title=\"Fermer le volet des commentaires\" onClick={() => setDisplayComments(!displayComments)}>\n                <i className=\"fas fa-caret-up\" title=\"Masquer les commentaires\"></i>\n            </div>\n\n        </>\n    )\n}\nexport default Publication;","import { useState, useEffect } from 'react';\nimport Publication from \"./Publication\";\nimport { serverUrl } from '../config';\n\nconst Publications = () => {\n\n    const [publications, setPublications] = useState([]);\n    const token = JSON.parse(localStorage.getItem(\"token\"));\n\n\n    // Récupération des publications\n    useEffect(() => {\n        fetch(`${serverUrl}/api/publications`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                \"authorization\": \"Bearer \" + token\n            }\n        })\n            .then((res) => res.json())\n            .then((res) => setPublications(res))\n            .catch((error) => console.error(error));\n\n    }, [token]);\n\n\n    // Suppression de la publication\n    const deletePost = (postId) => {\n\n        fetch(`${serverUrl}/api/publications/` + postId, {\n            method: 'DELETE',\n            headers: { \"authorization\": \"Bearer \" + token }\n        })\n            .then((res) => {\n\n                // TODO: vérifier si OK\n                if (res.ok) {\n                    // Suppression réussie, récupérer les publications mises à jour\n                    return fetch(`${serverUrl}/api/publications`, {\n                        method: 'GET',\n                        headers: { \"authorization\": \"Bearer \" + token }\n                    });\n                } else {\n                    throw new Error('Erreur lors de la suppression de la publication');\n                }\n            })\n            .then((res) => res.json())\n            .then((data) => setPublications(data))\n            .catch((error) => console.error(error));\n    }\n\n\n    return (\n        <>\n            {publications && publications.map((publication) => (\n                <div className=\"post-container\" key={publication._id}>\n                    <Publication\n                        publication={publication}\n                        postToDelete={deletePost} />\n                </div >\n            ))\n            }\n        </>\n    );\n};\n\nexport default Publications;","import { Link } from \"react-router-dom\";\nimport HeaderSmall from \"../components/HeaderSmall\";\nimport Publications from \"../components/Publications\";\n\nconst PagePublications = () => {\n\n\n    return (\n        <>\n            <HeaderSmall />\n            <div className=\"main\">\n                <div className=\"intro\">Les dernières publications</div>\n                <Publications />\n                <Link exact to=\"/nouvelle-publication\" className=\"bt-new-publication\"><i className=\"fas fa-edit\"></i></Link>\n            </div>\n\n        </>\n    );\n};\n\nexport default PagePublications;\n","import { useState } from 'react';\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom';\nimport avatarPlaceHolder from '../assets/images/avatar.svg'\nimport { format } from 'date-fns'\nimport { serverUrl } from '../config';\n\nconst NewPublication = () => {\n\n    const [image, setImage] = useState({ preview: \"\", imageUrl: \"\" })\n    const [publication, setPublication] = useState(false);\n    const [msgAlert, setMsgAlert] = useState({ title_error: \"\", image__error: \"\" });\n\n\n    // chargement des infos utilisateur (Localstorage) au chargement de la page\n    const currentUserInfos = JSON.parse(localStorage.getItem(\"currentUserInfos\"));\n    const token = JSON.parse(localStorage.getItem(\"token\"));\n\n    // action  à la validation du formulaire\n    const submit = e => {\n        e.preventDefault()\n\n        const today = format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\")\n\n\n        // FormData prends en paramètre l'élément html du formulaire et vas chercher les \"name\" donc nous donne un objet ayant les mêmes noms que ceux précisés dans le html\n        const formData = new FormData(e.target);\n        formData.append(\"postDate\", today);\n        formData.append(\"username\", currentUserInfos.username);\n        formData.append(\"avatarUrl\", currentUserInfos.avatarUrl);\n        formData.append(\"userId\", currentUserInfos.userId);\n\n        if ((e.target.postTitle.value !== \"\") && (e.target.image.files[0] !== undefined)) {\n\n            fetch(`${serverUrl}/api/publications`, {\n                method: 'POST',\n                body: formData,\n                // headers: { 'Content-Type': 'multipart/form-data' },\n                headers: { \"authorization\": \"Bearer \" + token }\n            })\n                .then(res => res.json()\n                    .then(json => { setPublication(json) }\n\n                    ));\n\n\n        } else {\n            if (e.target.postTitle.value === \"\") {\n                setMsgAlert({ title_error: \"Titre manquant\", image_error: \"\" })\n            }\n            if (e.target.image.files[0] === undefined) {\n                setMsgAlert({ title_error: \"\", image_error: \"Image manquante\" })\n            }\n            if ((e.target.postTitle.value === \"\") && (e.target.image.files[0] === undefined)) {\n                setMsgAlert({ title_error: \"Titre manquant\", image_error: \"Image manquante\" })\n            }\n        }\n    }\n\n    // Création de l'url de l'image et sa preview\n    const getImageUrl = (e) => {\n        if (e.target.files.length) {\n            setImage({ preview: URL.createObjectURL(e.target.files[0]), imageUrl: e.target.files[0] });\n        }\n    }\n\n    return (\n        <>\n            <div className=\"post-container new-post-container\">\n                <div className=\"post-author\">\n                    <div className=\"post-author-avatar\"><img src={currentUserInfos.avatarUrl === \"undefined\" ? avatarPlaceHolder : currentUserInfos.avatarUrl} alt=\"\" /></div>\n                    <div><span className=\"post-author-name\">{currentUserInfos.username}</span></div>\n                    <Link exact to=\"/publications\" className=\"bt-close\"><i className=\"fas fa-times\"></i></Link>\n                </div>\n                <form className=\"post-new-publication\" onSubmit={submit}>\n                    <input type=\"text\" name=\"postTitle\" id=\"titre\" placeholder=\"Titre de la publication\" />\n                    <div className=\"error-msg\"> <p>{msgAlert.title_error}</p></div>\n\n                    <label htmlFor=\"upload-button\">{\n                        image.preview ?\n                            <img src={image.preview} alt='' />\n                            :\n                            <div className=\"upload-button\"><i className=\"fas fa-file-upload\"></i> &nbsp;Charger une image</div>\n                    }</label>\n                    <input type=\"file\" name=\"image\" id=\"upload-button\" accept=\".png, .jpg, .jpeg\" onChange={getImageUrl} style={{ display: \"none\" }} />\n                    <div className=\"error-msg\"> <p>{msgAlert.image_error}</p></div>\n                    {/* <div className=\"error-msg\"> {user.error && <p>{user.error}</p>}</div> */}\n\n                    <input type=\"submit\" name=\"envoyer-message\" value=\"Envoyer la publication\" className=\"bt\" />\n                    {publication.message !== undefined && <Redirect to=\"/publications\" />}\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default NewPublication;","import HeaderSmall from \"../components/HeaderSmall\"\nimport NewPublication from \"../components/NewPublication\"\n\nconst PageNewPublication = () => {\n    return (\n        <>\n            <HeaderSmall />\n            <div className=\"main\">\n                <NewPublication />\n            </div>\n        </>\n    );\n};\n\nexport default PageNewPublication;","import { Link } from \"react-router-dom\";\nimport Header from \"../components/Header\";\n\nconst Page404 = () => {\n    return (\n        <>\n           <Header />\n            <div className=\"main\">\n                <div className=\"page404\">\n                    <h1>Erreur 404</h1>\n                    <div className=\"message404\">page non trouvée</div>\n                    <Link exact to=\"/\">Retour à l'accueil</Link>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Page404;","import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Redirect } from 'react-router'\n\n\nimport PageLogin from \"./pages/PageLogin\";\nimport PageSignUp from \"./pages/PageSignUp\";\nimport PageProfile from \"./pages/PageProfile\";\nimport PageDeleteProfile from \"./pages/PageDeleteProfile\";\nimport PagePublications from \"./pages/PagePublications\";\nimport PageNewPublication from \"./pages/PageNewPublication\";\nimport Page404 from \"./pages/Page404\";\n\n\n\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n\n  useEffect(() => {\n    // Vérifier la présence du token dans le localStorage au montage du composant\n    const hasToken = localStorage.getItem(\"token\");\n    setIsLoggedIn(!!hasToken);\n\n    // Vérifier la présence du token dans le localStorage à intervalles réguliers (toutes les 1 seconde par exemple)\n    const interval = setInterval(() => {\n      const hasToken = localStorage.getItem(\"token\");\n      setIsLoggedIn(!!hasToken);\n    }, 1000);\n\n    // Nettoyer l'intervalle lors du démontage du composant\n    return () => clearInterval(interval);\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n\n          {/* Redirection vers \"/publications\" si l'utilisateur est connecté ou accède à \"/\" */}\n          {isLoggedIn && <Redirect exact from=\"/login\" to=\"/publications\" />}\n          {!isLoggedIn && <Redirect exact from=\"/\" to=\"/login\" />}\n\n          <Route path=\"/page404\" exact component={Page404} />\n\n          {/* Routes pour l'utilisateur connecté */}\n          {isLoggedIn ? (\n            <>\n              {/* Redirection vers \"/publications\" si l'utilisateur accède à \"/login\" */}\n              <Route path=\"/login\">\n                <Redirect to=\"/publications\" />\n              </Route>\n              <Route exact path=\"/\">\n                <Redirect to=\"/publications\" />\n              </Route>\n              <Route path=\"/profil\" exact>\n                <PageProfile setIsLoggedIn={setIsLoggedIn} />\n              </Route>\n              <Route path=\"/publications\" exact component={PagePublications} />\n              <Route path=\"/suppression-profil\" exact component={PageDeleteProfile} />\n              <Route path=\"/nouvelle-publication\" exact component={PageNewPublication} />\n\n\n            </>\n          ) : (\n            // Routes pour l'utilisateur non connecté\n            <>\n              <Route exact path=\"/\">\n                <Redirect to=\"/login\" />\n              </Route>\n              <Route path=\"/login\" exact component={PageLogin} />\n              <Route path=\"/inscription\" exact component={PageSignUp} />\n              {/* Redirection vers la page de connexion (\"/login\") si l'utilisateur accède à une URL privée */}\n              <Redirect to=\"/login\" />\n            </>\n          )}\n\n          {/* Route pour la page 404 - Capturer toutes les URL inconnues */}\n          <Route path=\"*\" component={Page404} />\n\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}